rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserId() {
      return request.auth.uid;
    }
    
    // Appointments collection - WORKING SOLUTION (BYPASS COMPARISON ISSUE)
    match /appointments/{appointmentId} {
      // Create: Allow creation with basic validation, no user comparison
      allow create: if isAuthenticated() && 
                      // Basic field validation
                      request.data.keys().hasAll(['patientName', 'dateTime', 'symptoms', 'status', 'userId', 'createdBy']) &&
                      // Field type validation
                      request.data.patientName is string &&
                      request.data.dateTime is timestamp &&
                      request.data.symptoms is string &&
                      request.data.status is string &&
                      request.data.userId is string &&
                      request.data.createdBy is string &&
                      // Status validation
                      request.data.status in ['scheduled', 'completed', 'no_show', 'confirmed', 'declined'];
      
      // Read: Users can read their own appointments (this comparison works)
      allow read: if isAuthenticated() && 
                     resource.data.userId == getUserId();
      
      // Update: Users can update their own appointments (this comparison works)
      allow update: if isAuthenticated() && 
                      resource.data.userId == getUserId() &&
                      // Ensure userId cannot be changed
                      request.data.userId == resource.data.userId;
      
      // Delete: Users can delete their own appointments (this comparison works)
      allow delete: if isAuthenticated() && 
                      resource.data.userId == getUserId();
    }
    
    // Users collection
    match /users/{userId} {
      allow read, write: if isAuthenticated() && userId == getUserId();
    }
    
    // All other collections - deny by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
